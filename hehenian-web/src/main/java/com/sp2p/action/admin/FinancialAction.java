package com.sp2p.action.admin;import java.sql.SQLException;import java.util.List;import java.util.Map;import com.shove.Convert;import com.shove.data.DataException;import com.shove.util.SqlInfusion;import com.shove.web.action.BasePageAction;import com.sp2p.service.UserService;import com.sp2p.service.ValidateService;@SuppressWarnings("unchecked")public class FinancialAction extends BasePageAction {	private static final long serialVersionUID = 1L;	private ValidateService validateService;	@SuppressWarnings("unused")	private UserService userService;		public void setUserService(UserService userService) {		this.userService = userService;	}	public void setValidateService(ValidateService validateService) {		this.validateService = validateService;	}	/**	 * 	 * 	 * @return	 * @throws DataException	 * @throws SQLException	 */	public String rechargeecordsInit() throws SQLException, DataException {		String types = Convert.strToStr(request("types"),"-1");		request().setAttribute("types",types);		return SUCCESS;	}	/**	 * 	 * 	 * @return	 * @throws SQLException	 * @throws DataException	 */	public String rechargeecordsInfo() throws SQLException, DataException {		// 资料审核状态		Integer auditStatus = Convert.strToInt(paramMap.get("auditStatus"), 1);		// 会员名称		String userName = Convert.strToStr(SqlInfusion.FilteSqlInfusion(paramMap.get("userName")), null);		// 跟踪人		String serviceManName = Convert.strToStr(				SqlInfusion.FilteSqlInfusion(paramMap.get("serviceManName")), null);		// 认证名称		String certificateName = Convert.strToStr(SqlInfusion.FilteSqlInfusion(paramMap				.get("certificateName")), null);		// 真实名称		String realName = Convert.strToStr(SqlInfusion.FilteSqlInfusion(paramMap.get("realName")), null);		validateService.queryBaseValidata(pageBean, userName, realName, auditStatus, certificateName,serviceManName);				return SUCCESS;	}		/**	 * 	 * 	 * @return	 * @throws SQLException	 * @throws DataException	 */	public String querynewUserCheck() throws SQLException, DataException {		// 会员名称		String userName = Convert.strToStr(SqlInfusion.FilteSqlInfusion(paramMap.get("userName")), null);		List<Map<String,Object>> map = null;		Map<String,String> distributemap = null;		map = validateService.queryServiceNameByI();		if(map!=null&&map.size()>0){			request().setAttribute("map",map);		}		validateService.querynewUserCheck(pageBean, userName);//显示所有新用户分配资料		//统计有多少个新用户待分配		distributemap = validateService.querydistribute();//统计总的统计新用户未分配的的个数		request().setAttribute("distributemap",distributemap);		return SUCCESS;	}			}